// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: main.capnp

#include "main.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<247> b_91a9615edd4f3b7c = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    124,  59,  79, 221,  94,  97, 169, 145,
     11,   0,   0,   0,   1,   0,   4,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0, 131,   2,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  80, 108,  97, 121, 101,
    114,  73,  99, 111, 110,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     60,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   1,   0,   0,   3,   0,   1,   0,
    156,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    160,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   1,   0,   0,   3,   0,   1,   0,
    164,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   1,   0,   0,   3,   0,   1,   0,
    168,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    172,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   1,   0,   0,   3,   0,   1,   0,
    176,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   1,   0,   0,   3,   0,   1,   0,
    180,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   1,   0,   0,   3,   0,   1,   0,
    192,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   1,   0,   0,   3,   0,   1,   0,
    196,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   1,   0,   0,   3,   0,   1,   0,
    204,   1,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  24,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,  25,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
     99, 117,  98, 101,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 112,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 108, 108,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 102, 111,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  97, 118, 101,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111,  98, 111, 116,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 105, 100, 101, 114,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 119, 105, 110, 103,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 101, 116, 112,  97,  99, 107,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108, 111, 114,  49,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108, 111, 114,  50,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 108, 111, 119,  67, 111, 108, 111,
    114,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  97, 116, 104,  69, 102, 102,
    101,  99, 116,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 105, 108,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0, 255,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  84, 114,  97, 105,
    108,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0, 255,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91a9615edd4f3b7c = b_91a9615edd4f3b7c.words;
#if !CAPNP_LITE
static const uint16_t m_91a9615edd4f3b7c[] = {2, 9, 10, 0, 12, 11, 8, 5, 1, 14, 6, 7, 13, 3, 4};
static const uint16_t i_91a9615edd4f3b7c[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
const ::capnp::_::RawSchema s_91a9615edd4f3b7c = {
  0x91a9615edd4f3b7c, b_91a9615edd4f3b7c.words, 247, nullptr, m_91a9615edd4f3b7c,
  0, 15, i_91a9615edd4f3b7c, nullptr, nullptr, { &s_91a9615edd4f3b7c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_d8e63e340b51fcd5 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    213, 252,  81,  11,  52,  62, 230, 216,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   2,   0,   0, 235,   2,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  80, 108,  97, 121, 101,
    114,  65,  99,  99, 111, 117, 110, 116,
     68,  97, 116,  97,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,  73, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114, 110,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8e63e340b51fcd5 = b_d8e63e340b51fcd5.words;
#if !CAPNP_LITE
static const uint16_t m_d8e63e340b51fcd5[] = {0, 1, 2};
static const uint16_t i_d8e63e340b51fcd5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d8e63e340b51fcd5 = {
  0xd8e63e340b51fcd5, b_d8e63e340b51fcd5.words, 66, nullptr, m_d8e63e340b51fcd5,
  0, 3, i_d8e63e340b51fcd5, nullptr, nullptr, { &s_d8e63e340b51fcd5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e7a1fff383ec4dd3 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    211,  77, 236, 131, 243, 255, 161, 231,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   2,   0,   0,  30,   3,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 101, 118, 101, 108,
     83, 101, 115, 115, 105, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7a1fff383ec4dd3 = b_e7a1fff383ec4dd3.words;
#if !CAPNP_LITE
static const uint16_t m_e7a1fff383ec4dd3[] = {0};
static const uint16_t i_e7a1fff383ec4dd3[] = {0};
const ::capnp::_::RawSchema s_e7a1fff383ec4dd3 = {
  0xe7a1fff383ec4dd3, b_e7a1fff383ec4dd3.words, 34, nullptr, m_e7a1fff383ec4dd3,
  0, 1, i_e7a1fff383ec4dd3, nullptr, nullptr, { &s_e7a1fff383ec4dd3, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_b5eb5fe04349279e = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    158,  39,  73,  67, 224,  95, 235, 181,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     50,   3,   0,   0, 124,   3,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     85,  84, 111, 107, 101, 110,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b5eb5fe04349279e = b_b5eb5fe04349279e.words;
#if !CAPNP_LITE
static const uint16_t m_b5eb5fe04349279e[] = {0, 1};
static const uint16_t i_b5eb5fe04349279e[] = {0, 1};
const ::capnp::_::RawSchema s_b5eb5fe04349279e = {
  0xb5eb5fe04349279e, b_b5eb5fe04349279e.words, 50, nullptr, m_b5eb5fe04349279e,
  0, 2, i_b5eb5fe04349279e, nullptr, nullptr, { &s_b5eb5fe04349279e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_b99e020791d89dd4 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    212, 157, 216, 145,   7,   2, 158, 185,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    126,   3,   0,   0, 199,   3,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     65, 114, 103, 111, 110,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b99e020791d89dd4 = b_b99e020791d89dd4.words;
#if !CAPNP_LITE
static const uint16_t m_b99e020791d89dd4[] = {0, 1};
static const uint16_t i_b99e020791d89dd4[] = {0, 1};
const ::capnp::_::RawSchema s_b99e020791d89dd4 = {
  0xb99e020791d89dd4, b_b99e020791d89dd4.words, 50, nullptr, m_b99e020791d89dd4,
  0, 2, i_b99e020791d89dd4, nullptr, nullptr, { &s_b99e020791d89dd4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e00502d30307b862 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     98, 184,   7,   3, 211,   2,   5, 224,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   3,   0,   0,   5,   4,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     80, 108,  97, 105, 110,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    213, 252,  81,  11,  52,  62, 230, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e00502d30307b862 = b_e00502d30307b862.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e00502d30307b862[] = {
  &s_d8e63e340b51fcd5,
};
static const uint16_t m_e00502d30307b862[] = {0};
static const uint16_t i_e00502d30307b862[] = {0};
const ::capnp::_::RawSchema s_e00502d30307b862 = {
  0xe00502d30307b862, b_e00502d30307b862.words, 34, d_e00502d30307b862, m_e00502d30307b862,
  1, 1, i_e00502d30307b862, nullptr, nullptr, { &s_e00502d30307b862, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_d0381709099cc27c = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    124, 194, 156,   9,   9,  23,  56, 208,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   4,   0,   0, 128,   4,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     79, 107,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    110, 101, 119,  84, 111, 107, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 118,  87, 208,  60, 115, 217, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0381709099cc27c = b_d0381709099cc27c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0381709099cc27c[] = {
  &s_dbd9733cd0577674,
};
static const uint16_t m_d0381709099cc27c[] = {0, 1};
static const uint16_t i_d0381709099cc27c[] = {0, 1};
const ::capnp::_::RawSchema s_d0381709099cc27c = {
  0xd0381709099cc27c, b_d0381709099cc27c.words, 54, d_d0381709099cc27c, m_d0381709099cc27c,
  1, 2, i_d0381709099cc27c, nullptr, nullptr, { &s_d0381709099cc27c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_c74467e7c2ba2ab4 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    180,  42, 186, 194, 231, 103,  68, 199,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    130,   4,   0,   0,  37,   5,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 127,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     70,  97, 105, 108, 101, 100,  82, 101,
     97, 115, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  85,
    115, 101, 114,  84, 111, 107, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  65,
    114, 103, 111, 110,  84, 111, 107, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 111, 110,  78, 111, 116,
     83, 117, 112, 112, 111, 114, 116, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 111, 110,  85, 110, 114,
    101,  97,  99, 104,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 111, 110,  73, 110, 116,
    101, 114, 110,  97, 108,  69, 114, 114,
    111, 114,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c74467e7c2ba2ab4 = b_c74467e7c2ba2ab4.words;
#if !CAPNP_LITE
static const uint16_t m_c74467e7c2ba2ab4[] = {4, 2, 3, 1, 0};
const ::capnp::_::RawSchema s_c74467e7c2ba2ab4 = {
  0xc74467e7c2ba2ab4, b_c74467e7c2ba2ab4.words, 49, nullptr, m_c74467e7c2ba2ab4,
  0, 5, nullptr, nullptr, nullptr, { &s_c74467e7c2ba2ab4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(LoginFailedReason_c74467e7c2ba2ab4, c74467e7c2ba2ab4);
static const ::capnp::_::AlignedData<34> b_bbfb3e6266b46e00 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
      0, 110, 180, 102,  98,  62, 251, 187,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     39,   5,   0,   0, 121,   5,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     70,  97, 105, 108, 101, 100,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    180,  42, 186, 194, 231, 103,  68, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bbfb3e6266b46e00 = b_bbfb3e6266b46e00.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bbfb3e6266b46e00[] = {
  &s_c74467e7c2ba2ab4,
};
static const uint16_t m_bbfb3e6266b46e00[] = {0};
static const uint16_t i_bbfb3e6266b46e00[] = {0};
const ::capnp::_::RawSchema s_bbfb3e6266b46e00 = {
  0xbbfb3e6266b46e00, b_bbfb3e6266b46e00.words, 34, d_bbfb3e6266b46e00, m_bbfb3e6266b46e00,
  1, 1, i_bbfb3e6266b46e00, nullptr, nullptr, { &s_bbfb3e6266b46e00, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_c0792171a7e24cec = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    236,  76, 226, 167, 113,  33, 121, 192,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    123,   5,   0,   0, 177,   5,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     82, 101, 113, 117, 105, 114, 101, 100,
     77, 101, 115, 115,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
     97, 114, 103, 111, 110,  85, 114, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0792171a7e24cec = b_c0792171a7e24cec.words;
#if !CAPNP_LITE
static const uint16_t m_c0792171a7e24cec[] = {0};
static const uint16_t i_c0792171a7e24cec[] = {0};
const ::capnp::_::RawSchema s_c0792171a7e24cec = {
  0xc0792171a7e24cec, b_c0792171a7e24cec.words, 35, nullptr, m_c0792171a7e24cec,
  0, 1, i_c0792171a7e24cec, nullptr, nullptr, { &s_c0792171a7e24cec, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_b90a50af13cffdeb = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    235, 253, 207,  19, 175,  80,  10, 185,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    199,   5,   0,   0,   4,   6,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  85, 112, 100,  97, 116,
    101,  79, 119, 110,  68,  97, 116,  97,
     77, 101, 115, 115,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105,  99, 111, 110, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    124,  59,  79, 221,  94,  97, 169, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b90a50af13cffdeb = b_b90a50af13cffdeb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b90a50af13cffdeb[] = {
  &s_91a9615edd4f3b7c,
};
static const uint16_t m_b90a50af13cffdeb[] = {0};
static const uint16_t i_b90a50af13cffdeb[] = {0};
const ::capnp::_::RawSchema s_b90a50af13cffdeb = {
  0xb90a50af13cffdeb, b_b90a50af13cffdeb.words, 34, d_b90a50af13cffdeb, m_b90a50af13cffdeb,
  1, 1, i_b90a50af13cffdeb, nullptr, nullptr, { &s_b90a50af13cffdeb, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ebbb3301ca9b3b86 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    134,  59, 155, 202,   1,  51, 187, 235,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     34,   6,   0,   0,  81,   6,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  67, 114, 101,  97, 116,
    101,  82, 111, 111, 109,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ebbb3301ca9b3b86 = b_ebbb3301ca9b3b86.words;
#if !CAPNP_LITE
static const uint16_t m_ebbb3301ca9b3b86[] = {0};
static const uint16_t i_ebbb3301ca9b3b86[] = {0};
const ::capnp::_::RawSchema s_ebbb3301ca9b3b86 = {
  0xebbb3301ca9b3b86, b_ebbb3301ca9b3b86.words, 34, nullptr, m_ebbb3301ca9b3b86,
  0, 1, i_ebbb3301ca9b3b86, nullptr, nullptr, { &s_ebbb3301ca9b3b86, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_de35351c7d81af2a = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     42, 175, 129, 125,  28,  53,  53, 222,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,   6,   0,   0, 132,   6,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  82,
    111, 111, 109,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 109,  73, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_de35351c7d81af2a = b_de35351c7d81af2a.words;
#if !CAPNP_LITE
static const uint16_t m_de35351c7d81af2a[] = {0};
static const uint16_t i_de35351c7d81af2a[] = {0};
const ::capnp::_::RawSchema s_de35351c7d81af2a = {
  0xde35351c7d81af2a, b_de35351c7d81af2a.words, 34, nullptr, m_de35351c7d81af2a,
  0, 1, i_de35351c7d81af2a, nullptr, nullptr, { &s_de35351c7d81af2a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_b6d00e88c7eab31d = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     29, 179, 234, 199, 136,  14, 208, 182,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    134,   6,   0,   0, 173,   6,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 101,  97, 118, 101,
     82, 111, 111, 109,  77, 101, 115, 115,
     97, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b6d00e88c7eab31d = b_b6d00e88c7eab31d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b6d00e88c7eab31d = {
  0xb6d00e88c7eab31d, b_b6d00e88c7eab31d.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b6d00e88c7eab31d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_da80ce7d00b0d262 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     98, 210, 176,   0, 125, 206, 128, 218,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    175,   6,   0,   0,  27,   7,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  80,
    108,  97, 121, 101, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  68,
     97, 116,  97,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    213, 252,  81,  11,  52,  62, 230, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117,  98, 101,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 118, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  77, 236, 131, 243, 255, 161, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da80ce7d00b0d262 = b_da80ce7d00b0d262.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_da80ce7d00b0d262[] = {
  &s_d8e63e340b51fcd5,
  &s_e7a1fff383ec4dd3,
};
static const uint16_t m_da80ce7d00b0d262[] = {0, 1, 2};
static const uint16_t i_da80ce7d00b0d262[] = {0, 1, 2};
const ::capnp::_::RawSchema s_da80ce7d00b0d262 = {
  0xda80ce7d00b0d262, b_da80ce7d00b0d262.words, 64, d_da80ce7d00b0d262, m_da80ce7d00b0d262,
  2, 3, i_da80ce7d00b0d262, nullptr, nullptr, { &s_da80ce7d00b0d262, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_ccb001c4c4eb3e03 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
      3,  62, 235, 196, 196,   1, 176, 204,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   7,   0,   0, 133,   7,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  83,
    116,  97, 116, 101,  77, 101, 115, 115,
     97, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 109,  73, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 121, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 210, 176,   0, 125, 206, 128, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ccb001c4c4eb3e03 = b_ccb001c4c4eb3e03.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ccb001c4c4eb3e03[] = {
  &s_da80ce7d00b0d262,
};
static const uint16_t m_ccb001c4c4eb3e03[] = {1, 2, 0};
static const uint16_t i_ccb001c4c4eb3e03[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ccb001c4c4eb3e03 = {
  0xccb001c4c4eb3e03, b_ccb001c4c4eb3e03.words, 68, d_ccb001c4c4eb3e03, m_ccb001c4c4eb3e03,
  1, 3, i_ccb001c4c4eb3e03, nullptr, nullptr, { &s_ccb001c4c4eb3e03, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_d29a1ce11a72e63b = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     59, 230, 114,  26, 225,  28, 154, 210,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    166,   7,   0,   0, 221,   7,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d29a1ce11a72e63b = b_d29a1ce11a72e63b.words;
#if !CAPNP_LITE
static const uint16_t m_d29a1ce11a72e63b[] = {0};
static const uint16_t i_d29a1ce11a72e63b[] = {0};
const ::capnp::_::RawSchema s_d29a1ce11a72e63b = {
  0xd29a1ce11a72e63b, b_d29a1ce11a72e63b.words, 35, nullptr, m_d29a1ce11a72e63b,
  0, 1, i_d29a1ce11a72e63b, nullptr, nullptr, { &s_d29a1ce11a72e63b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_90a88382c0ae35d9 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    217,  53, 174, 192, 130, 131, 168, 144,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    223,   7,   0,   0, 252,   7,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 101,  97, 118, 101,
     83, 101, 115, 115, 105, 111, 110,  77,
    101, 115, 115,  97, 103, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_90a88382c0ae35d9 = b_90a88382c0ae35d9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_90a88382c0ae35d9 = {
  0x90a88382c0ae35d9, b_90a88382c0ae35d9.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_90a88382c0ae35d9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<30> b_b2c070962aef8cf9 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    249, 140, 239,  42, 150, 112, 192, 178,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    254,   7,   0,   0,  72,   8,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  70,  97,
    105, 108, 101, 100,  82, 101,  97, 115,
    111, 110,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  82,
    111, 111, 109,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  83,
    101, 114, 118, 101, 114,   0,   0,   0, }
};
::capnp::word const* const bp_b2c070962aef8cf9 = b_b2c070962aef8cf9.words;
#if !CAPNP_LITE
static const uint16_t m_b2c070962aef8cf9[] = {0, 1};
const ::capnp::_::RawSchema s_b2c070962aef8cf9 = {
  0xb2c070962aef8cf9, b_b2c070962aef8cf9.words, 30, nullptr, m_b2c070962aef8cf9,
  0, 2, nullptr, nullptr, nullptr, { &s_b2c070962aef8cf9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(JoinSessionFailedReason_b2c070962aef8cf9, b2c070962aef8cf9);
static const ::capnp::_::AlignedData<34> b_b9e820a8df044915 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     21,  73,   4, 223, 168,  32, 232, 185,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     74,   8,   0,   0, 142,   8,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  70,
     97, 105, 108, 101, 100,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    249, 140, 239,  42, 150, 112, 192, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b9e820a8df044915 = b_b9e820a8df044915.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b9e820a8df044915[] = {
  &s_b2c070962aef8cf9,
};
static const uint16_t m_b9e820a8df044915[] = {0};
static const uint16_t i_b9e820a8df044915[] = {0};
const ::capnp::_::RawSchema s_b9e820a8df044915 = {
  0xb9e820a8df044915, b_b9e820a8df044915.words, 34, d_b9e820a8df044915, m_b9e820a8df044915,
  1, 1, i_b9e820a8df044915, nullptr, nullptr, { &s_b9e820a8df044915, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_83b0a859b8e7faec = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    236, 250, 231, 184,  89, 168, 176, 131,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    155,   8,   0,   0, 213,   8,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  87,  97, 114, 112,  80,
    108,  97, 121, 101, 114,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  77, 236, 131, 243, 255, 161, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83b0a859b8e7faec = b_83b0a859b8e7faec.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_83b0a859b8e7faec[] = {
  &s_e7a1fff383ec4dd3,
};
static const uint16_t m_83b0a859b8e7faec[] = {0};
static const uint16_t i_83b0a859b8e7faec[] = {0};
const ::capnp::_::RawSchema s_83b0a859b8e7faec = {
  0x83b0a859b8e7faec, b_83b0a859b8e7faec.words, 34, d_83b0a859b8e7faec, m_83b0a859b8e7faec,
  1, 1, i_83b0a859b8e7faec, nullptr, nullptr, { &s_83b0a859b8e7faec, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<257> b_a55b5ef7374b3a21 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     33,  58,  75,  55, 247,  94,  91, 165,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,  15,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    215,   8,   0,   0, 226,  11,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  79,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     60,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    160,   1,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   1,   0,   0,   3,   0,   1,   0,
    168,   1,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   1,   0,   0,   3,   0,   1,   0,
    176,   1,   0,   0,   2,   0,   1,   0,
      9,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   1,   0,   0,   3,   0,   1,   0,
    180,   1,   0,   0,   2,   0,   1,   0,
     10,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
     11,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   1,   0,   0,   3,   0,   1,   0,
    196,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   1,   0,   0,   3,   0,   1,   0,
    204,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    220,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   1,   0,   0,   3,   0,   1,   0,
    228,   1,   0,   0,   2,   0,   1,   0,
     14,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
     12,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
      7,   0, 243, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   1,   0,   0,   3,   0,   1,   0,
    252,   1,   0,   0,   2,   0,   1,   0,
      8,   0, 242, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   1,   0,   0,   3,   0,   1,   0,
      4,   2,   0,   0,   2,   0,   1,   0,
     13,   0, 241, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   0,   0,   3,   0,   1,   0,
     12,   2,   0,   0,   2,   0,   1,   0,
    108, 111, 103, 105, 110,  85,  84, 111,
    107, 101, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    158,  39,  73,  67, 224,  95, 235, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  65, 114, 103,
    111, 110,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212, 157, 216, 145,   7,   2, 158, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  80, 108,  97,
    105, 110,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 184,   7,   3, 211,   2,   5, 224,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  79, 107,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    124, 194, 156,   9,   9,  23,  56, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  70,  97, 105,
    108, 101, 100,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0, 110, 180, 102,  98,  62, 251, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  82, 101, 113,
    117, 105, 114, 101, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  76, 226, 167, 113,  33, 121, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 100,  97, 116, 101,  79, 119,
    110,  68,  97, 116,  97,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    235, 253, 207,  19, 175,  80,  10, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 101,  97, 116, 101,  82, 111,
    111, 109,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    134,  59, 155, 202,   1,  51, 187, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  82, 111, 111, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     42, 175, 129, 125,  28,  53,  53, 222,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 118, 101,  82, 111, 111,
    109,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29, 179, 234, 199, 136,  14, 208, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  97, 114, 112,  80, 108,  97, 121,
    101, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236, 250, 231, 184,  89, 168, 176, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  83, 116,  97, 116,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      3,  62, 235, 196, 196,   1, 176, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  83, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59, 230, 114,  26, 225,  28, 154, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 118, 101,  83, 101, 115,
    115, 105, 111, 110,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    217,  53, 174, 192, 130, 131, 168, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  70,  97, 105, 108,
    101, 100,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21,  73,   4, 223, 168,  32, 232, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a55b5ef7374b3a21 = b_a55b5ef7374b3a21.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a55b5ef7374b3a21[] = {
  &s_83b0a859b8e7faec,
  &s_90a88382c0ae35d9,
  &s_b5eb5fe04349279e,
  &s_b6d00e88c7eab31d,
  &s_b90a50af13cffdeb,
  &s_b99e020791d89dd4,
  &s_b9e820a8df044915,
  &s_bbfb3e6266b46e00,
  &s_c0792171a7e24cec,
  &s_ccb001c4c4eb3e03,
  &s_d0381709099cc27c,
  &s_d29a1ce11a72e63b,
  &s_de35351c7d81af2a,
  &s_e00502d30307b862,
  &s_ebbb3301ca9b3b86,
};
static const uint16_t m_a55b5ef7374b3a21[] = {7, 14, 8, 12, 9, 13, 1, 4, 3, 2, 5, 0, 11, 6, 10};
static const uint16_t i_a55b5ef7374b3a21[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
const ::capnp::_::RawSchema s_a55b5ef7374b3a21 = {
  0xa55b5ef7374b3a21, b_a55b5ef7374b3a21.words, 257, d_a55b5ef7374b3a21, m_a55b5ef7374b3a21,
  15, 15, i_a55b5ef7374b3a21, nullptr, nullptr, { &s_a55b5ef7374b3a21, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace globed {
namespace schema {
namespace main {

// PlayerIconData
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PlayerIconData::_capnpPrivate::dataWordSize;
constexpr uint16_t PlayerIconData::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PlayerIconData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PlayerIconData::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PlayerAccountData
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PlayerAccountData::_capnpPrivate::dataWordSize;
constexpr uint16_t PlayerAccountData::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PlayerAccountData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PlayerAccountData::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LevelSession
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LevelSession::_capnpPrivate::dataWordSize;
constexpr uint16_t LevelSession::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LevelSession::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LevelSession::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginUTokenMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginUTokenMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginUTokenMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginUTokenMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginUTokenMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginArgonMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginArgonMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginArgonMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginArgonMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginArgonMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginPlainMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginPlainMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginPlainMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginPlainMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginPlainMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginOkMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginOkMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginOkMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginOkMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginOkMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginRequiredMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginRequiredMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginRequiredMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginRequiredMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginRequiredMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// UpdateOwnDataMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t UpdateOwnDataMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t UpdateOwnDataMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind UpdateOwnDataMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UpdateOwnDataMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CreateRoomMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CreateRoomMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateRoomMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CreateRoomMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateRoomMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinRoomMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinRoomMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinRoomMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinRoomMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinRoomMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LeaveRoomMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LeaveRoomMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaveRoomMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LeaveRoomMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaveRoomMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomPlayer
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomPlayer::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomPlayer::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomPlayer::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomPlayer::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomStateMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomStateMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomStateMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomStateMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomStateMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinSessionMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinSessionMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinSessionMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinSessionMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinSessionMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LeaveSessionMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LeaveSessionMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaveSessionMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LeaveSessionMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaveSessionMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// WarpPlayerMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t WarpPlayerMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t WarpPlayerMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind WarpPlayerMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WarpPlayerMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Message
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

