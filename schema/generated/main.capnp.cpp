// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: main.capnp

#include "main.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<66> b_d8e63e340b51fcd5 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    213, 252,  81,  11,  52,  62, 230, 216,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   6,   1,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  80, 108,  97, 121, 101,
    114,  65,  99,  99, 111, 117, 110, 116,
     68,  97, 116,  97,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,  73, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114, 110,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8e63e340b51fcd5 = b_d8e63e340b51fcd5.words;
#if !CAPNP_LITE
static const uint16_t m_d8e63e340b51fcd5[] = {0, 1, 2};
static const uint16_t i_d8e63e340b51fcd5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d8e63e340b51fcd5 = {
  0xd8e63e340b51fcd5, b_d8e63e340b51fcd5.words, 66, nullptr, m_d8e63e340b51fcd5,
  0, 3, i_d8e63e340b51fcd5, nullptr, nullptr, { &s_d8e63e340b51fcd5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_b5eb5fe04349279e = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    158,  39,  73,  67, 224,  95, 235, 181,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     26,   1,   0,   0, 137,   1,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     85,  84, 111, 107, 101, 110,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,  99, 111, 110, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    118, 167, 148,  69, 137,  18, 132, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b5eb5fe04349279e = b_b5eb5fe04349279e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b5eb5fe04349279e[] = {
  &s_e38412894594a776,
};
static const uint16_t m_b5eb5fe04349279e[] = {0, 2, 1};
static const uint16_t i_b5eb5fe04349279e[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b5eb5fe04349279e = {
  0xb5eb5fe04349279e, b_b5eb5fe04349279e.words, 65, d_b5eb5fe04349279e, m_b5eb5fe04349279e,
  1, 3, i_b5eb5fe04349279e, nullptr, nullptr, { &s_b5eb5fe04349279e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_b99e020791d89dd4 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    212, 157, 216, 145,   7,   2, 158, 185,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    139,   1,   0,   0, 249,   1,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     65, 114, 103, 111, 110,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,  99, 111, 110, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    118, 167, 148,  69, 137,  18, 132, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b99e020791d89dd4 = b_b99e020791d89dd4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b99e020791d89dd4[] = {
  &s_e38412894594a776,
};
static const uint16_t m_b99e020791d89dd4[] = {0, 2, 1};
static const uint16_t i_b99e020791d89dd4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b99e020791d89dd4 = {
  0xb99e020791d89dd4, b_b99e020791d89dd4.words, 65, d_b99e020791d89dd4, m_b99e020791d89dd4,
  1, 3, i_b99e020791d89dd4, nullptr, nullptr, { &s_b99e020791d89dd4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_e00502d30307b862 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     98, 184,   7,   3, 211,   2,   5, 224,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    251,   1,   0,   0,  92,   2,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     80, 108,  97, 105, 110,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    213, 252,  81,  11,  52,  62, 230, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,  99, 111, 110, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    118, 167, 148,  69, 137,  18, 132, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e00502d30307b862 = b_e00502d30307b862.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e00502d30307b862[] = {
  &s_d8e63e340b51fcd5,
  &s_e38412894594a776,
};
static const uint16_t m_e00502d30307b862[] = {0, 1};
static const uint16_t i_e00502d30307b862[] = {0, 1};
const ::capnp::_::RawSchema s_e00502d30307b862 = {
  0xe00502d30307b862, b_e00502d30307b862.words, 49, d_e00502d30307b862, m_e00502d30307b862,
  2, 2, i_e00502d30307b862, nullptr, nullptr, { &s_e00502d30307b862, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_d0381709099cc27c = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    124, 194, 156,   9,   9,  23,  56, 208,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     94,   2,   0,   0, 255,   2,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     79, 107,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
    110, 101, 119,  84, 111, 107, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 118,  87, 208,  60, 115, 217, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 108,  82, 111, 108, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 142,  89,  69, 219,  97, 175, 167,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,  82, 111, 108, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0381709099cc27c = b_d0381709099cc27c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0381709099cc27c[] = {
  &s_a7af61db45598ea4,
  &s_dbd9733cd0577674,
};
static const uint16_t m_d0381709099cc27c[] = {2, 0, 1, 3};
static const uint16_t i_d0381709099cc27c[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d0381709099cc27c = {
  0xd0381709099cc27c, b_d0381709099cc27c.words, 94, d_d0381709099cc27c, m_d0381709099cc27c,
  2, 4, i_d0381709099cc27c, nullptr, nullptr, { &s_d0381709099cc27c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_c74467e7c2ba2ab4 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    180,  42, 186, 194, 231, 103,  68, 199,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   3,   0,   0, 195,   3,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     70,  97, 105, 108, 101, 100,  82, 101,
     97, 115, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  85,
    115, 101, 114,  84, 111, 107, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  65,
    114, 103, 111, 110,  84, 111, 107, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 111, 110,  78, 111, 116,
     83, 117, 112, 112, 111, 114, 116, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 111, 110,  85, 110, 114,
    101,  97,  99, 104,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 111, 110,  73, 110, 116,
    101, 114, 110,  97, 108,  69, 114, 114,
    111, 114,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 110,  97, 108,
     68,  98,  69, 114, 114, 111, 114,   0, }
};
::capnp::word const* const bp_c74467e7c2ba2ab4 = b_c74467e7c2ba2ab4.words;
#if !CAPNP_LITE
static const uint16_t m_c74467e7c2ba2ab4[] = {4, 2, 3, 5, 1, 0};
const ::capnp::_::RawSchema s_c74467e7c2ba2ab4 = {
  0xc74467e7c2ba2ab4, b_c74467e7c2ba2ab4.words, 54, nullptr, m_c74467e7c2ba2ab4,
  0, 6, nullptr, nullptr, nullptr, { &s_c74467e7c2ba2ab4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(LoginFailedReason_c74467e7c2ba2ab4, c74467e7c2ba2ab4);
static const ::capnp::_::AlignedData<34> b_bbfb3e6266b46e00 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
      0, 110, 180, 102,  98,  62, 251, 187,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   3,   0,   0,  23,   4,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     70,  97, 105, 108, 101, 100,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    180,  42, 186, 194, 231, 103,  68, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bbfb3e6266b46e00 = b_bbfb3e6266b46e00.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bbfb3e6266b46e00[] = {
  &s_c74467e7c2ba2ab4,
};
static const uint16_t m_bbfb3e6266b46e00[] = {0};
static const uint16_t i_bbfb3e6266b46e00[] = {0};
const ::capnp::_::RawSchema s_bbfb3e6266b46e00 = {
  0xbbfb3e6266b46e00, b_bbfb3e6266b46e00.words, 34, d_bbfb3e6266b46e00, m_bbfb3e6266b46e00,
  1, 1, i_bbfb3e6266b46e00, nullptr, nullptr, { &s_bbfb3e6266b46e00, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_c0792171a7e24cec = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    236,  76, 226, 167, 113,  33, 121, 192,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   4,   0,   0,  79,   4,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     82, 101, 113, 117, 105, 114, 101, 100,
     77, 101, 115, 115,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
     97, 114, 103, 111, 110,  85, 114, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0792171a7e24cec = b_c0792171a7e24cec.words;
#if !CAPNP_LITE
static const uint16_t m_c0792171a7e24cec[] = {0};
static const uint16_t i_c0792171a7e24cec[] = {0};
const ::capnp::_::RawSchema s_c0792171a7e24cec = {
  0xc0792171a7e24cec, b_c0792171a7e24cec.words, 35, nullptr, m_c0792171a7e24cec,
  0, 1, i_c0792171a7e24cec, nullptr, nullptr, { &s_c0792171a7e24cec, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_e94115bf16c4b5a8 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    168, 181, 196,  22, 191,  21,  65, 233,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   4,   0,   0, 151,   4,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  66,  97, 110, 110, 101,
    100,  77, 101, 115, 115,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 105, 114, 101, 115,  65,
    116,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e94115bf16c4b5a8 = b_e94115bf16c4b5a8.words;
#if !CAPNP_LITE
static const uint16_t m_e94115bf16c4b5a8[] = {1, 0};
static const uint16_t i_e94115bf16c4b5a8[] = {0, 1};
const ::capnp::_::RawSchema s_e94115bf16c4b5a8 = {
  0xe94115bf16c4b5a8, b_e94115bf16c4b5a8.words, 50, nullptr, m_e94115bf16c4b5a8,
  0, 2, i_e94115bf16c4b5a8, nullptr, nullptr, { &s_e94115bf16c4b5a8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_b90a50af13cffdeb = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    235, 253, 207,  19, 175,  80,  10, 185,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   4,   0,   0,  39,   5,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  85, 112, 100,  97, 116,
    101,  79, 119, 110,  68,  97, 116,  97,
     77, 101, 115, 115,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    105,  99, 111, 110, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    118, 167, 148,  69, 137,  18, 132, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 105, 101, 110, 100,  76, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b90a50af13cffdeb = b_b90a50af13cffdeb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b90a50af13cffdeb[] = {
  &s_e38412894594a776,
};
static const uint16_t m_b90a50af13cffdeb[] = {1, 0};
static const uint16_t i_b90a50af13cffdeb[] = {0, 1};
const ::capnp::_::RawSchema s_b90a50af13cffdeb = {
  0xb90a50af13cffdeb, b_b90a50af13cffdeb.words, 54, d_b90a50af13cffdeb, m_b90a50af13cffdeb,
  1, 2, i_b90a50af13cffdeb, nullptr, nullptr, { &s_b90a50af13cffdeb, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_f6f0f63e8a860c1c = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     28,  12, 134, 138,  62, 246, 240, 246,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   5,   0,   0, 107,   5,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 101, 113, 117, 101,
    115, 116,  80, 108,  97, 121, 101, 114,
     67, 111, 117, 110, 116, 115,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    108, 101, 118, 101, 108, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6f0f63e8a860c1c = b_f6f0f63e8a860c1c.words;
#if !CAPNP_LITE
static const uint16_t m_f6f0f63e8a860c1c[] = {0};
static const uint16_t i_f6f0f63e8a860c1c[] = {0};
const ::capnp::_::RawSchema s_f6f0f63e8a860c1c = {
  0xf6f0f63e8a860c1c, b_f6f0f63e8a860c1c.words, 39, nullptr, m_f6f0f63e8a860c1c,
  0, 1, i_f6f0f63e8a860c1c, nullptr, nullptr, { &s_f6f0f63e8a860c1c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_8eeeb2b3e84844c7 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    199,  68,  72, 232, 179, 178, 238, 142,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   5,   0,   0, 199,   5,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  80, 108,  97, 121, 101,
    114,  67, 111, 117, 110, 116, 115,  77,
    101, 115, 115,  97, 103, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    108, 101, 118, 101, 108,  73, 100, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 117, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8eeeb2b3e84844c7 = b_8eeeb2b3e84844c7.words;
#if !CAPNP_LITE
static const uint16_t m_8eeeb2b3e84844c7[] = {1, 0};
static const uint16_t i_8eeeb2b3e84844c7[] = {0, 1};
const ::capnp::_::RawSchema s_8eeeb2b3e84844c7 = {
  0x8eeeb2b3e84844c7, b_8eeeb2b3e84844c7.words, 58, nullptr, m_8eeeb2b3e84844c7,
  0, 2, i_8eeeb2b3e84844c7, nullptr, nullptr, { &s_8eeeb2b3e84844c7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<177> b_b8949f0d2a5b8019 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     25, 128,  91,  42,  13, 159, 148, 184,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   5,   0,   0,  71,   7,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  83,
    101, 116, 116, 105, 110, 103, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   1,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   1,   0,   0,   3,   0,   1,   0,
     40,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  19,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   1,   0,   0,   3,   0,   1,   0,
     48,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  20,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     45,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   1,   0,   0,   3,   0,   1,   0,
     56,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  21,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     53,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   3,   0,   1,   0,
     64,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  22,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
     88,   1,   0,   0,   2,   0,   1,   0,
    112, 108,  97, 121, 101, 114,  76, 105,
    109, 105, 116,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  97, 115, 116, 101, 114,  82, 101,
    115, 101, 116,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 105, 100, 100, 101, 110,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 105, 118,  97, 116, 101,  73,
    110, 118, 105, 116, 101, 115,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  70, 111, 108, 108, 111, 119,
    101, 114,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108, 108, 105, 115, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 119, 111,  80, 108,  97, 121, 101,
    114,  77, 111, 100, 101,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  97, 116, 104, 108, 105, 110,
    107,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 118, 101, 108,  73, 110, 116,
    101, 103, 114, 105, 116, 121,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 101, 114,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8949f0d2a5b8019 = b_b8949f0d2a5b8019.words;
#if !CAPNP_LITE
static const uint16_t m_b8949f0d2a5b8019[] = {5, 7, 1, 2, 4, 8, 0, 3, 9, 6};
static const uint16_t i_b8949f0d2a5b8019[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
const ::capnp::_::RawSchema s_b8949f0d2a5b8019 = {
  0xb8949f0d2a5b8019, b_b8949f0d2a5b8019.words, 177, nullptr, m_b8949f0d2a5b8019,
  0, 10, i_b8949f0d2a5b8019, nullptr, nullptr, { &s_b8949f0d2a5b8019, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_ebbb3301ca9b3b86 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    134,  59, 155, 202,   1,  51, 187, 235,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   7,   0,   0, 176,   7,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  67, 114, 101,  97, 116,
    101,  82, 111, 111, 109,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115,  99, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25, 128,  91,  42,  13, 159, 148, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ebbb3301ca9b3b86 = b_ebbb3301ca9b3b86.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ebbb3301ca9b3b86[] = {
  &s_b8949f0d2a5b8019,
};
static const uint16_t m_ebbb3301ca9b3b86[] = {0, 1, 2};
static const uint16_t i_ebbb3301ca9b3b86[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ebbb3301ca9b3b86 = {
  0xebbb3301ca9b3b86, b_ebbb3301ca9b3b86.words, 66, d_ebbb3301ca9b3b86, m_ebbb3301ca9b3b86,
  1, 3, i_ebbb3301ca9b3b86, nullptr, nullptr, { &s_ebbb3301ca9b3b86, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_de35351c7d81af2a = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     42, 175, 129, 125,  28,  53,  53, 222,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    178,   7,   0,   0, 252,   7,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  82,
    111, 111, 109,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 109,  73, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115,  99, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_de35351c7d81af2a = b_de35351c7d81af2a.words;
#if !CAPNP_LITE
static const uint16_t m_de35351c7d81af2a[] = {1, 0};
static const uint16_t i_de35351c7d81af2a[] = {0, 1};
const ::capnp::_::RawSchema s_de35351c7d81af2a = {
  0xde35351c7d81af2a, b_de35351c7d81af2a.words, 50, nullptr, m_de35351c7d81af2a,
  0, 2, i_de35351c7d81af2a, nullptr, nullptr, { &s_de35351c7d81af2a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_cc26655ccf6a542b = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     43,  84, 106, 207,  92, 101,  38, 204,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    254,   7,   0,   0,  30,   8,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 101, 113, 117, 101,
    115, 116,  82, 111, 111, 109,  76, 105,
    115, 116,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_cc26655ccf6a542b = b_cc26655ccf6a542b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cc26655ccf6a542b = {
  0xcc26655ccf6a542b, b_cc26655ccf6a542b.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cc26655ccf6a542b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<110> b_da80ce7d00b0d262 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     98, 210, 176,   0, 125, 206, 128, 218,
     11,   0,   0,   0,   1,   0,   2,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   8,   0,   0, 208,   8,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  80,
    108,  97, 121, 101, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  68,
     97, 116,  97,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    213, 252,  81,  11,  52,  62, 230, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117,  98, 101,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108, 111, 114,  49,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108, 111, 114,  50,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 108, 111, 119,  67, 111, 108, 111,
    114,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da80ce7d00b0d262 = b_da80ce7d00b0d262.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_da80ce7d00b0d262[] = {
  &s_d8e63e340b51fcd5,
};
static const uint16_t m_da80ce7d00b0d262[] = {0, 2, 3, 1, 5, 4};
static const uint16_t i_da80ce7d00b0d262[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_da80ce7d00b0d262 = {
  0xda80ce7d00b0d262, b_da80ce7d00b0d262.words, 110, d_da80ce7d00b0d262, m_da80ce7d00b0d262,
  1, 6, i_da80ce7d00b0d262, nullptr, nullptr, { &s_da80ce7d00b0d262, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<101> b_ccb001c4c4eb3e03 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
      3,  62, 235, 196, 196,   1, 176, 204,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    210,   8,   0,   0, 135,   9,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  83,
    116,  97, 116, 101,  77, 101, 115, 115,
     97, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 109,  73, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  79, 119, 110, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 121, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 210, 176,   0, 125, 206, 128, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25, 128,  91,  42,  13, 159, 148, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ccb001c4c4eb3e03 = b_ccb001c4c4eb3e03.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ccb001c4c4eb3e03[] = {
  &s_b8949f0d2a5b8019,
  &s_da80ce7d00b0d262,
};
static const uint16_t m_ccb001c4c4eb3e03[] = {3, 0, 2, 1, 4};
static const uint16_t i_ccb001c4c4eb3e03[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_ccb001c4c4eb3e03 = {
  0xccb001c4c4eb3e03, b_ccb001c4c4eb3e03.words, 101, d_ccb001c4c4eb3e03, m_ccb001c4c4eb3e03,
  2, 5, i_ccb001c4c4eb3e03, nullptr, nullptr, { &s_ccb001c4c4eb3e03, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_e8b80e1d2395f44a = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     74, 244, 149,  35,  29,  14, 184, 232,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   9,   0,   0, 220,   9,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  74,
    111, 105, 110,  70,  97, 105, 108, 101,
    100,  82, 101,  97, 115, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  70, 111, 117, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  80,
     97, 115, 115,  99, 111, 100, 101,   0,
    102, 117, 108, 108,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e8b80e1d2395f44a = b_e8b80e1d2395f44a.words;
#if !CAPNP_LITE
static const uint16_t m_e8b80e1d2395f44a[] = {2, 1, 0};
const ::capnp::_::RawSchema s_e8b80e1d2395f44a = {
  0xe8b80e1d2395f44a, b_e8b80e1d2395f44a.words, 33, nullptr, m_e8b80e1d2395f44a,
  0, 3, nullptr, nullptr, nullptr, { &s_e8b80e1d2395f44a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(RoomJoinFailedReason_e8b80e1d2395f44a, e8b80e1d2395f44a);
static const ::capnp::_::AlignedData<35> b_8911338fc9a382c3 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    195, 130, 163, 201, 143,  51,  17, 137,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    222,   9,   0,   0,  35,  10,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  74,
    111, 105, 110,  70,  97, 105, 108, 101,
    100,  77, 101, 115, 115,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     74, 244, 149,  35,  29,  14, 184, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8911338fc9a382c3 = b_8911338fc9a382c3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8911338fc9a382c3[] = {
  &s_e8b80e1d2395f44a,
};
static const uint16_t m_8911338fc9a382c3[] = {0};
static const uint16_t i_8911338fc9a382c3[] = {0};
const ::capnp::_::RawSchema s_8911338fc9a382c3 = {
  0x8911338fc9a382c3, b_8911338fc9a382c3.words, 35, d_8911338fc9a382c3, m_8911338fc9a382c3,
  1, 1, i_8911338fc9a382c3, nullptr, nullptr, { &s_8911338fc9a382c3, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_84e06a378efe2263 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     99,  34, 254, 142,  55, 106, 224, 132,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,  10,   0,   0, 203,  10,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  67,
    114, 101,  97, 116, 101,  70,  97, 105,
    108, 101, 100,  82, 101,  97, 115, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  78,
     97, 109, 101,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  83,
    101, 116, 116, 105, 110, 103, 115,   0,
    105, 110, 118,  97, 108, 105, 100,  80,
     97, 115, 115,  99, 111, 100, 101,   0,
    105, 110, 118,  97, 108, 105, 100,  83,
    101, 114, 118, 101, 114,   0,   0,   0,
    115, 101, 114, 118, 101, 114,  68, 111,
    119, 110,   0,   0,   0,   0,   0,   0,
    105, 110,  97, 112, 112, 114, 111, 112,
    114, 105,  97, 116, 101,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84e06a378efe2263 = b_84e06a378efe2263.words;
#if !CAPNP_LITE
static const uint16_t m_84e06a378efe2263[] = {5, 0, 2, 3, 1, 4};
const ::capnp::_::RawSchema s_84e06a378efe2263 = {
  0x84e06a378efe2263, b_84e06a378efe2263.words, 51, nullptr, m_84e06a378efe2263,
  0, 6, nullptr, nullptr, nullptr, { &s_84e06a378efe2263, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(RoomCreateFailedReason_84e06a378efe2263, 84e06a378efe2263);
static const ::capnp::_::AlignedData<35> b_ea1cad45b5cbffd4 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    212, 255, 203, 181,  69, 173,  28, 234,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,  10,   0,   0,  22,  11,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  67,
    114, 101,  97, 116, 101,  70,  97, 105,
    108, 101, 100,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     99,  34, 254, 142,  55, 106, 224, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea1cad45b5cbffd4 = b_ea1cad45b5cbffd4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ea1cad45b5cbffd4[] = {
  &s_84e06a378efe2263,
};
static const uint16_t m_ea1cad45b5cbffd4[] = {0};
static const uint16_t i_ea1cad45b5cbffd4[] = {0};
const ::capnp::_::RawSchema s_ea1cad45b5cbffd4 = {
  0xea1cad45b5cbffd4, b_ea1cad45b5cbffd4.words, 35, d_ea1cad45b5cbffd4, m_ea1cad45b5cbffd4,
  1, 1, i_ea1cad45b5cbffd4, nullptr, nullptr, { &s_ea1cad45b5cbffd4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<114> b_aebac2806ec82f8d = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    141,  47, 200, 110, 128, 194, 186, 174,
     11,   0,   0,   0,   1,   0,   2,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,  11,   0,   0, 211,  11,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  76,
    105, 115, 116, 105, 110, 103,  73, 110,
    102, 111,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  64,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 109,  73, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  79, 119, 110, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 210, 176,   0, 125, 206, 128, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 121, 101, 114,  67, 111,
    117, 110, 116,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115,  80,  97, 115, 115, 119,
    111, 114, 100,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25, 128,  91,  42,  13, 159, 148, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aebac2806ec82f8d = b_aebac2806ec82f8d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aebac2806ec82f8d[] = {
  &s_b8949f0d2a5b8019,
  &s_da80ce7d00b0d262,
};
static const uint16_t m_aebac2806ec82f8d[] = {4, 3, 0, 1, 2, 5};
static const uint16_t i_aebac2806ec82f8d[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_aebac2806ec82f8d = {
  0xaebac2806ec82f8d, b_aebac2806ec82f8d.words, 114, d_aebac2806ec82f8d, m_aebac2806ec82f8d,
  2, 6, i_aebac2806ec82f8d, nullptr, nullptr, { &s_aebac2806ec82f8d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_dae9ec8d26c6d0b3 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    179, 208, 198,  38, 141, 236, 233, 218,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,  11,   0,   0,  31,  12,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  66,
     97, 110, 110, 101, 100,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 105, 114, 101, 115,  65,
    116,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dae9ec8d26c6d0b3 = b_dae9ec8d26c6d0b3.words;
#if !CAPNP_LITE
static const uint16_t m_dae9ec8d26c6d0b3[] = {1, 0};
static const uint16_t i_dae9ec8d26c6d0b3[] = {0, 1};
const ::capnp::_::RawSchema s_dae9ec8d26c6d0b3 = {
  0xdae9ec8d26c6d0b3, b_dae9ec8d26c6d0b3.words, 50, nullptr, m_dae9ec8d26c6d0b3,
  0, 2, i_dae9ec8d26c6d0b3, nullptr, nullptr, { &s_dae9ec8d26c6d0b3, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_d56d617651a514bf = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    191,  20, 165,  81, 118,  97, 109, 213,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,  12,   0,   0,  96,  12,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 109,  76,
    105, 115, 116,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 111, 109, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  47, 200, 110, 128, 194, 186, 174,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d56d617651a514bf = b_d56d617651a514bf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d56d617651a514bf[] = {
  &s_aebac2806ec82f8d,
};
static const uint16_t m_d56d617651a514bf[] = {0};
static const uint16_t i_d56d617651a514bf[] = {0};
const ::capnp::_::RawSchema s_d56d617651a514bf = {
  0xd56d617651a514bf, b_d56d617651a514bf.words, 38, d_d56d617651a514bf, m_d56d617651a514bf,
  1, 1, i_d56d617651a514bf, nullptr, nullptr, { &s_d56d617651a514bf, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_d29a1ce11a72e63b = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     59, 230, 114,  26, 225,  28, 154, 210,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,  12,   0,   0, 184,  12,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d29a1ce11a72e63b = b_d29a1ce11a72e63b.words;
#if !CAPNP_LITE
static const uint16_t m_d29a1ce11a72e63b[] = {0};
static const uint16_t i_d29a1ce11a72e63b[] = {0};
const ::capnp::_::RawSchema s_d29a1ce11a72e63b = {
  0xd29a1ce11a72e63b, b_d29a1ce11a72e63b.words, 35, nullptr, m_d29a1ce11a72e63b,
  0, 1, i_d29a1ce11a72e63b, nullptr, nullptr, { &s_d29a1ce11a72e63b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_90a88382c0ae35d9 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    217,  53, 174, 192, 130, 131, 168, 144,
     11,   0,   0,   0,   1,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    186,  12,   0,   0, 215,  12,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  76, 101,  97, 118, 101,
     83, 101, 115, 115, 105, 111, 110,  77,
    101, 115, 115,  97, 103, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_90a88382c0ae35d9 = b_90a88382c0ae35d9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_90a88382c0ae35d9 = {
  0x90a88382c0ae35d9, b_90a88382c0ae35d9.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_90a88382c0ae35d9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<30> b_b2c070962aef8cf9 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    249, 140, 239,  42, 150, 112, 192, 178,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,  12,   0,   0,  35,  13,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  70,  97,
    105, 108, 101, 100,  82, 101,  97, 115,
    111, 110,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  82,
    111, 111, 109,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  83,
    101, 114, 118, 101, 114,   0,   0,   0, }
};
::capnp::word const* const bp_b2c070962aef8cf9 = b_b2c070962aef8cf9.words;
#if !CAPNP_LITE
static const uint16_t m_b2c070962aef8cf9[] = {0, 1};
const ::capnp::_::RawSchema s_b2c070962aef8cf9 = {
  0xb2c070962aef8cf9, b_b2c070962aef8cf9.words, 30, nullptr, m_b2c070962aef8cf9,
  0, 2, nullptr, nullptr, nullptr, { &s_b2c070962aef8cf9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(JoinSessionFailedReason_b2c070962aef8cf9, b2c070962aef8cf9);
static const ::capnp::_::AlignedData<34> b_b9e820a8df044915 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     21,  73,   4, 223, 168,  32, 232, 185,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,  13,   0,   0, 105,  13,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  70,
     97, 105, 108, 101, 100,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    249, 140, 239,  42, 150, 112, 192, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b9e820a8df044915 = b_b9e820a8df044915.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b9e820a8df044915[] = {
  &s_b2c070962aef8cf9,
};
static const uint16_t m_b9e820a8df044915[] = {0};
static const uint16_t i_b9e820a8df044915[] = {0};
const ::capnp::_::RawSchema s_b9e820a8df044915 = {
  0xb9e820a8df044915, b_b9e820a8df044915.words, 34, d_b9e820a8df044915, m_b9e820a8df044915,
  1, 1, i_b9e820a8df044915, nullptr, nullptr, { &s_b9e820a8df044915, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_83b0a859b8e7faec = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    236, 250, 231, 184,  89, 168, 176, 131,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107,  13,   0,   0, 159,  13,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  87,  97, 114, 112,  80,
    108,  97, 121, 101, 114,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83b0a859b8e7faec = b_83b0a859b8e7faec.words;
#if !CAPNP_LITE
static const uint16_t m_83b0a859b8e7faec[] = {0};
static const uint16_t i_83b0a859b8e7faec[] = {0};
const ::capnp::_::RawSchema s_83b0a859b8e7faec = {
  0x83b0a859b8e7faec, b_83b0a859b8e7faec.words, 34, nullptr, m_83b0a859b8e7faec,
  0, 1, i_83b0a859b8e7faec, nullptr, nullptr, { &s_83b0a859b8e7faec, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_dd60476e8cb3a480 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    128, 164, 179, 140, 110,  71,  96, 221,
     11,   0,   0,   0,   2,   0,   0,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,  13,   0,   0, 226,  13,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  75, 105,  99, 107,  82,
    101,  97, 115, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,   0,   0,
    100, 117, 112, 108, 105,  99,  97, 116,
    101,  76, 111, 103, 105, 110,   0,   0, }
};
::capnp::word const* const bp_dd60476e8cb3a480 = b_dd60476e8cb3a480.words;
#if !CAPNP_LITE
static const uint16_t m_dd60476e8cb3a480[] = {0, 1};
const ::capnp::_::RawSchema s_dd60476e8cb3a480 = {
  0xdd60476e8cb3a480, b_dd60476e8cb3a480.words, 27, nullptr, m_dd60476e8cb3a480,
  0, 2, nullptr, nullptr, nullptr, { &s_dd60476e8cb3a480, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(KickReason_dd60476e8cb3a480, dd60476e8cb3a480);
static const ::capnp::_::AlignedData<49> b_ad6874573952b8c9 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    201, 184,  82,  57,  87, 116, 104, 173,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,  13,   0,   0,  45,  14,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  75, 105,  99, 107, 101,
    100,  77, 101, 115, 115,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    128, 164, 179, 140, 110,  71,  96, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad6874573952b8c9 = b_ad6874573952b8c9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ad6874573952b8c9[] = {
  &s_dd60476e8cb3a480,
};
static const uint16_t m_ad6874573952b8c9[] = {1, 0};
static const uint16_t i_ad6874573952b8c9[] = {0, 1};
const ::capnp::_::RawSchema s_ad6874573952b8c9 = {
  0xad6874573952b8c9, b_ad6874573952b8c9.words, 49, d_ad6874573952b8c9, m_ad6874573952b8c9,
  1, 2, i_ad6874573952b8c9, nullptr, nullptr, { &s_ad6874573952b8c9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<417> b_a55b5ef7374b3a21 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     33,  58,  75,  55, 247,  94,  91, 165,
     11,   0,   0,   0,   1,   0,   1,   0,
     76, 207, 255, 242, 150,   9,  47, 202,
      1,   0,   7,   0,   0,   0,  25,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     47,  14,   0,   0,  95,  19,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 127,   5,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    100,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   2,   0,   0,   3,   0,   1,   0,
    184,   2,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   2,   0,   0,   3,   0,   1,   0,
    192,   2,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   2,   0,   0,   3,   0,   1,   0,
    200,   2,   0,   0,   2,   0,   1,   0,
     12,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   2,   0,   0,   3,   0,   1,   0,
    204,   2,   0,   0,   2,   0,   1,   0,
     13,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   2,   0,   0,   3,   0,   1,   0,
    212,   2,   0,   0,   2,   0,   1,   0,
     14,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   2,   0,   0,   3,   0,   1,   0,
    220,   2,   0,   0,   2,   0,   1,   0,
      3,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   2,   0,   0,   3,   0,   1,   0,
    228,   2,   0,   0,   2,   0,   1,   0,
      5,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   2,   0,   0,   3,   0,   1,   0,
    236,   2,   0,   0,   2,   0,   1,   0,
      6,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   2,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   2,   0,   0,   3,   0,   1,   0,
    244,   2,   0,   0,   2,   0,   1,   0,
      7,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   2,   0,   0,   3,   0,   1,   0,
    252,   2,   0,   0,   2,   0,   1,   0,
     23,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   2,   0,   0,   3,   0,   1,   0,
      4,   3,   0,   0,   2,   0,   1,   0,
     17,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   3,   0,   0,   3,   0,   1,   0,
     12,   3,   0,   0,   2,   0,   1,   0,
     10,   0, 243, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   3,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   3,   0,   0,   3,   0,   1,   0,
     20,   3,   0,   0,   2,   0,   1,   0,
     11,   0, 242, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   3,   0,   0,   3,   0,   1,   0,
     28,   3,   0,   0,   2,   0,   1,   0,
     22,   0, 241, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   3,   0,   0,   3,   0,   1,   0,
     36,   3,   0,   0,   2,   0,   1,   0,
     24,   0, 240, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   3,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   3,   0,   0,   3,   0,   1,   0,
     40,   3,   0,   0,   2,   0,   1,   0,
      8,   0, 239, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   3,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   3,   0,   0,   3,   0,   1,   0,
     48,   3,   0,   0,   2,   0,   1,   0,
      4,   0, 238, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   3,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   3,   0,   0,   3,   0,   1,   0,
     60,   3,   0,   0,   2,   0,   1,   0,
     16,   0, 237, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   3,   0,   0,   3,   0,   1,   0,
     68,   3,   0,   0,   2,   0,   1,   0,
     18,   0, 236, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   3,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   3,   0,   0,   3,   0,   1,   0,
     76,   3,   0,   0,   2,   0,   1,   0,
     19,   0, 235, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   3,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   3,   0,   0,   3,   0,   1,   0,
     88,   3,   0,   0,   2,   0,   1,   0,
      9,   0, 234, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  21,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   3,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   3,   0,   0,   3,   0,   1,   0,
     96,   3,   0,   0,   2,   0,   1,   0,
     21,   0, 233, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  22,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   3,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   3,   0,   0,   3,   0,   1,   0,
    104,   3,   0,   0,   2,   0,   1,   0,
     15,   0, 232, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   3,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   3,   0,   0,   3,   0,   1,   0,
    108,   3,   0,   0,   2,   0,   1,   0,
     20,   0, 231, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  24,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   3,   0,   0,   3,   0,   1,   0,
    116,   3,   0,   0,   2,   0,   1,   0,
    108, 111, 103, 105, 110,  85,  84, 111,
    107, 101, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    158,  39,  73,  67, 224,  95, 235, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  65, 114, 103,
    111, 110,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212, 157, 216, 145,   7,   2, 158, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  80, 108,  97,
    105, 110,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 184,   7,   3, 211,   2,   5, 224,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  79, 107,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    124, 194, 156,   9,   9,  23,  56, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  70,  97, 105,
    108, 101, 100,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0, 110, 180, 102,  98,  62, 251, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  82, 101, 113,
    117, 105, 114, 101, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  76, 226, 167, 113,  33, 121, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 100,  97, 116, 101,  79, 119,
    110,  68,  97, 116,  97,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    235, 253, 207,  19, 175,  80,  10, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 101,  97, 116, 101,  82, 111,
    111, 109,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    134,  59, 155, 202,   1,  51, 187, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  82, 111, 111, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     42, 175, 129, 125,  28,  53,  53, 222,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 118, 101,  82, 111, 111,
    109,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  97, 114, 112,  80, 108,  97, 121,
    101, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236, 250, 231, 184,  89, 168, 176, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  83, 116,  97, 116,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      3,  62, 235, 196, 196,   1, 176, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  83, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59, 230, 114,  26, 225,  28, 154, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 118, 101,  83, 101, 115,
    115, 105, 111, 110,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    217,  53, 174, 192, 130, 131, 168, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  70,  97, 105, 108,
    101, 100,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21,  73,   4, 223, 168,  32, 232, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105,  99, 107, 101, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    201, 184,  82,  57,  87, 116, 104, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 101,  99, 107,  82, 111, 111,
    109,  83, 116,  97, 116, 101,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  80,
    108,  97, 121, 101, 114,  67, 111, 117,
    110, 116, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     28,  12, 134, 138,  62, 246, 240, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 121, 101, 114,  67, 111,
    117, 110, 116, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    199,  68,  72, 232, 179, 178, 238, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  74, 111, 105, 110,
     70,  97, 105, 108, 101, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    195, 130, 163, 201, 143,  51,  17, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  67, 114, 101,  97,
    116, 101,  70,  97, 105, 108, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212, 255, 203, 181,  69, 173,  28, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  82,
    111, 111, 109,  76, 105, 115, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     43,  84, 106, 207,  92, 101,  38, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    191,  20, 165,  81, 118,  97, 109, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 110, 110, 101, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    168, 181, 196,  22, 191,  21,  65, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 109,  66,  97, 110, 110,
    101, 100,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    179, 208, 198,  38, 141, 236, 233, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a55b5ef7374b3a21 = b_a55b5ef7374b3a21.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a55b5ef7374b3a21[] = {
  &s_83b0a859b8e7faec,
  &s_8911338fc9a382c3,
  &s_8eeeb2b3e84844c7,
  &s_90a88382c0ae35d9,
  &s_ad6874573952b8c9,
  &s_b5eb5fe04349279e,
  &s_b90a50af13cffdeb,
  &s_b99e020791d89dd4,
  &s_b9e820a8df044915,
  &s_bbfb3e6266b46e00,
  &s_c0792171a7e24cec,
  &s_cc26655ccf6a542b,
  &s_ccb001c4c4eb3e03,
  &s_d0381709099cc27c,
  &s_d29a1ce11a72e63b,
  &s_d56d617651a514bf,
  &s_dae9ec8d26c6d0b3,
  &s_de35351c7d81af2a,
  &s_e00502d30307b862,
  &s_e94115bf16c4b5a8,
  &s_ea1cad45b5cbffd4,
  &s_ebbb3301ca9b3b86,
  &s_f6f0f63e8a860c1c,
};
static const uint16_t m_a55b5ef7374b3a21[] = {23, 16, 7, 14, 8, 12, 15, 9, 13, 1, 4, 3, 2, 5, 0, 18, 17, 21, 24, 20, 19, 22, 11, 6, 10};
static const uint16_t i_a55b5ef7374b3a21[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24};
const ::capnp::_::RawSchema s_a55b5ef7374b3a21 = {
  0xa55b5ef7374b3a21, b_a55b5ef7374b3a21.words, 417, d_a55b5ef7374b3a21, m_a55b5ef7374b3a21,
  23, 25, i_a55b5ef7374b3a21, nullptr, nullptr, { &s_a55b5ef7374b3a21, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace globed {
namespace schema {
namespace main {

// PlayerAccountData
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PlayerAccountData::_capnpPrivate::dataWordSize;
constexpr uint16_t PlayerAccountData::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PlayerAccountData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PlayerAccountData::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginUTokenMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginUTokenMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginUTokenMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginUTokenMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginUTokenMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginArgonMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginArgonMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginArgonMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginArgonMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginArgonMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginPlainMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginPlainMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginPlainMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginPlainMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginPlainMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginOkMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginOkMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginOkMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginOkMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginOkMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginRequiredMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginRequiredMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginRequiredMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginRequiredMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginRequiredMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// BannedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t BannedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t BannedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind BannedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BannedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// UpdateOwnDataMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t UpdateOwnDataMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t UpdateOwnDataMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind UpdateOwnDataMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UpdateOwnDataMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RequestPlayerCountsMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RequestPlayerCountsMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RequestPlayerCountsMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RequestPlayerCountsMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RequestPlayerCountsMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PlayerCountsMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PlayerCountsMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t PlayerCountsMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PlayerCountsMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PlayerCountsMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomSettings
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomSettings::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomSettings::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomSettings::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomSettings::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CreateRoomMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CreateRoomMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateRoomMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CreateRoomMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateRoomMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinRoomMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinRoomMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinRoomMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinRoomMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinRoomMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RequestRoomListMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RequestRoomListMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RequestRoomListMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RequestRoomListMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RequestRoomListMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomPlayer
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomPlayer::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomPlayer::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomPlayer::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomPlayer::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomStateMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomStateMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomStateMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomStateMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomStateMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomJoinFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomJoinFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomJoinFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomJoinFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomJoinFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomCreateFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomCreateFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomCreateFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomCreateFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomCreateFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomListingInfo
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomListingInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomListingInfo::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomListingInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomListingInfo::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomBannedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomBannedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomBannedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomBannedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomBannedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RoomListMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RoomListMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t RoomListMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RoomListMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoomListMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinSessionMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinSessionMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinSessionMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinSessionMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinSessionMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LeaveSessionMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LeaveSessionMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaveSessionMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LeaveSessionMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaveSessionMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// WarpPlayerMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t WarpPlayerMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t WarpPlayerMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind WarpPlayerMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WarpPlayerMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// KickedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t KickedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t KickedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind KickedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* KickedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Message
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

