// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: game.capnp

#include "game.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<50> b_c89d589e40b63e4c = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     76,  62, 182,  64, 158,  88, 157, 200,
     11,   0,   0,   0,   1,   0,   1,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0, 194,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     85,  84, 111, 107, 101, 110,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c89d589e40b63e4c = b_c89d589e40b63e4c.words;
#if !CAPNP_LITE
static const uint16_t m_c89d589e40b63e4c[] = {0, 1};
static const uint16_t i_c89d589e40b63e4c[] = {0, 1};
const ::capnp::_::RawSchema s_c89d589e40b63e4c = {
  0xc89d589e40b63e4c, b_c89d589e40b63e4c.words, 50, nullptr, m_c89d589e40b63e4c,
  0, 2, i_c89d589e40b63e4c, nullptr, nullptr, { &s_c89d589e40b63e4c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<83> b_b5df2f02ff01e1a4 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    164, 225,   1, 255,   2,  47, 223, 181,
     11,   0,   0,   0,   1,   0,   2,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,  73,   1,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     85,  84, 111, 107, 101, 110,  65, 110,
    100,  74, 111, 105, 110,  77, 101, 115,
    115,  97, 103, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115,  99, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b5df2f02ff01e1a4 = b_b5df2f02ff01e1a4.words;
#if !CAPNP_LITE
static const uint16_t m_b5df2f02ff01e1a4[] = {0, 3, 2, 1};
static const uint16_t i_b5df2f02ff01e1a4[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b5df2f02ff01e1a4 = {
  0xb5df2f02ff01e1a4, b_b5df2f02ff01e1a4.words, 83, nullptr, m_b5df2f02ff01e1a4,
  0, 4, i_b5df2f02ff01e1a4, nullptr, nullptr, { &s_b5df2f02ff01e1a4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_d1b22feb8db7bef2 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    242, 190, 183, 141, 235,  47, 178, 209,
     11,   0,   0,   0,   1,   0,   0,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     75,   1,   0,   0, 100,   1,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     79, 107,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_d1b22feb8db7bef2 = b_d1b22feb8db7bef2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d1b22feb8db7bef2 = {
  0xd1b22feb8db7bef2, b_d1b22feb8db7bef2.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d1b22feb8db7bef2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_844b8252298018d8 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    216,  24, 128,  41,  82, 130,  75, 132,
     11,   0,   0,   0,   2,   0,   0,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,   1,   0,   0, 186,   1,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     70,  97, 105, 108, 101, 100,  82, 101,
     97, 115, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  85,
    115, 101, 114,  84, 111, 107, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 110, 116, 114,  97, 108,  83,
    101, 114, 118, 101, 114,  85, 110, 114,
    101,  97,  99, 104,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_844b8252298018d8 = b_844b8252298018d8.words;
#if !CAPNP_LITE
static const uint16_t m_844b8252298018d8[] = {1, 0};
const ::capnp::_::RawSchema s_844b8252298018d8 = {
  0x844b8252298018d8, b_844b8252298018d8.words, 32, nullptr, m_844b8252298018d8,
  0, 2, nullptr, nullptr, nullptr, { &s_844b8252298018d8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(LoginFailedReason_844b8252298018d8, 844b8252298018d8);
static const ::capnp::_::AlignedData<34> b_bcf24c2476f6df38 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     56, 223, 246, 118,  36,  76, 242, 188,
     11,   0,   0,   0,   1,   0,   1,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   1,   0,   0, 251,   1,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 103, 105, 110,
     70,  97, 105, 108, 101, 100,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    216,  24, 128,  41,  82, 130,  75, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bcf24c2476f6df38 = b_bcf24c2476f6df38.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bcf24c2476f6df38[] = {
  &s_844b8252298018d8,
};
static const uint16_t m_bcf24c2476f6df38[] = {0};
static const uint16_t i_bcf24c2476f6df38[] = {0};
const ::capnp::_::RawSchema s_bcf24c2476f6df38 = {
  0xbcf24c2476f6df38, b_bcf24c2476f6df38.words, 34, d_bcf24c2476f6df38, m_bcf24c2476f6df38,
  1, 1, i_bcf24c2476f6df38, nullptr, nullptr, { &s_bcf24c2476f6df38, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_cb73420259ca5cfc = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    252,  92, 202,  89,   2,  66, 115, 203,
     11,   0,   0,   0,   1,   0,   2,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   2,   0,   0,  98,   2,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115,  99, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb73420259ca5cfc = b_cb73420259ca5cfc.words;
#if !CAPNP_LITE
static const uint16_t m_cb73420259ca5cfc[] = {1, 0};
static const uint16_t i_cb73420259ca5cfc[] = {0, 1};
const ::capnp::_::RawSchema s_cb73420259ca5cfc = {
  0xcb73420259ca5cfc, b_cb73420259ca5cfc.words, 51, nullptr, m_cb73420259ca5cfc,
  0, 2, i_cb73420259ca5cfc, nullptr, nullptr, { &s_cb73420259ca5cfc, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_bc6decb777029037 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     55, 144,   2, 119, 183, 236, 109, 188,
     11,   0,   0,   0,   1,   0,   1,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   2,   0,   0, 157,   2,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  79, 107,
     77, 101, 115, 115,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc6decb777029037 = b_bc6decb777029037.words;
#if !CAPNP_LITE
static const uint16_t m_bc6decb777029037[] = {0};
static const uint16_t i_bc6decb777029037[] = {0};
const ::capnp::_::RawSchema s_bc6decb777029037 = {
  0xbc6decb777029037, b_bc6decb777029037.words, 35, nullptr, m_bc6decb777029037,
  0, 1, i_bc6decb777029037, nullptr, nullptr, { &s_bc6decb777029037, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<30> b_dff86b3bb0c6c45f = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     95, 196, 198, 176,  59, 107, 248, 223,
     11,   0,   0,   0,   2,   0,   0,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    159,   2,   0,   0, 232,   2,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  70,  97,
    105, 108, 101, 100,  82, 101,  97, 115,
    111, 110,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  70, 111, 117, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,  80,
     97, 115, 115,  99, 111, 100, 101,   0, }
};
::capnp::word const* const bp_dff86b3bb0c6c45f = b_dff86b3bb0c6c45f.words;
#if !CAPNP_LITE
static const uint16_t m_dff86b3bb0c6c45f[] = {1, 0};
const ::capnp::_::RawSchema s_dff86b3bb0c6c45f = {
  0xdff86b3bb0c6c45f, b_dff86b3bb0c6c45f.words, 30, nullptr, m_dff86b3bb0c6c45f,
  0, 2, nullptr, nullptr, nullptr, { &s_dff86b3bb0c6c45f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(JoinSessionFailedReason_dff86b3bb0c6c45f, dff86b3bb0c6c45f);
static const ::capnp::_::AlignedData<35> b_d0220b919cc3f7e9 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    233, 247, 195, 156, 145,  11,  34, 208,
     11,   0,   0,   0,   1,   0,   1,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    234,   2,   0,   0,  53,   3,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  74, 111, 105, 110,  83,
    101, 115, 115, 105, 111, 110,  70,  97,
    105, 108, 101, 100,  77, 101, 115, 115,
     97, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     95, 196, 198, 176,  59, 107, 248, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0220b919cc3f7e9 = b_d0220b919cc3f7e9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0220b919cc3f7e9[] = {
  &s_dff86b3bb0c6c45f,
};
static const uint16_t m_d0220b919cc3f7e9[] = {0};
static const uint16_t i_d0220b919cc3f7e9[] = {0};
const ::capnp::_::RawSchema s_d0220b919cc3f7e9 = {
  0xd0220b919cc3f7e9, b_d0220b919cc3f7e9.words, 35, d_d0220b919cc3f7e9, m_d0220b919cc3f7e9,
  1, 1, i_d0220b919cc3f7e9, nullptr, nullptr, { &s_d0220b919cc3f7e9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_ab51fdae26ff1d81 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    129,  29, 255,  38, 174, 253,  81, 171,
     11,   0,   0,   0,   1,   0,   0,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     55,   3,   0,   0,  85,   3,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  76, 101,  97, 118, 101,
     83, 101, 115, 115, 105, 111, 110,  77,
    101, 115, 115,  97, 103, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_ab51fdae26ff1d81 = b_ab51fdae26ff1d81.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ab51fdae26ff1d81 = {
  0xab51fdae26ff1d81, b_ab51fdae26ff1d81.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ab51fdae26ff1d81, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<114> b_ee430f29eef52d4e = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
     78,  45, 245, 238,  41,  15,  67, 238,
     11,   0,   0,   0,   1,   0,   1,   0,
    209,  60,  14,  10, 111,  74, 104, 149,
      1,   0,   7,   0,   0,   0,   6,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     87,   3,   0,   0, 230,   4,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103,  97, 109, 101,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
    108, 111, 103, 105, 110,  85,  84, 111,
    107, 101, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     76,  62, 182,  64, 158,  88, 157, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  79, 107,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 190, 183, 141, 235,  47, 178, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  70,  97, 105,
    108, 101, 100,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     56, 223, 246, 118,  36,  76, 242, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,  85,  84, 111,
    107, 101, 110,  65, 110, 100,  74, 111,
    105, 110,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 225,   1, 255,   2,  47, 223, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  83, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    252,  92, 202,  89,   2,  66, 115, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 118, 101,  83, 101, 115,
    115, 105, 111, 110,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129,  29, 255,  38, 174, 253,  81, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ee430f29eef52d4e = b_ee430f29eef52d4e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ee430f29eef52d4e[] = {
  &s_ab51fdae26ff1d81,
  &s_b5df2f02ff01e1a4,
  &s_bcf24c2476f6df38,
  &s_c89d589e40b63e4c,
  &s_cb73420259ca5cfc,
  &s_d1b22feb8db7bef2,
};
static const uint16_t m_ee430f29eef52d4e[] = {4, 5, 2, 1, 0, 3};
static const uint16_t i_ee430f29eef52d4e[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_ee430f29eef52d4e = {
  0xee430f29eef52d4e, b_ee430f29eef52d4e.words, 114, d_ee430f29eef52d4e, m_ee430f29eef52d4e,
  6, 6, i_ee430f29eef52d4e, nullptr, nullptr, { &s_ee430f29eef52d4e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace globed {
namespace schema {
namespace game {

// LoginUTokenMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginUTokenMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginUTokenMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginUTokenMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginUTokenMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginUTokenAndJoinMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginUTokenAndJoinMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginUTokenAndJoinMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginUTokenAndJoinMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginUTokenAndJoinMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginOkMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginOkMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginOkMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginOkMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginOkMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LoginFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LoginFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LoginFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LoginFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoginFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinSessionMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinSessionMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinSessionMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinSessionMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinSessionMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinSessionOkMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinSessionOkMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinSessionOkMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinSessionOkMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinSessionOkMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// JoinSessionFailedMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t JoinSessionFailedMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t JoinSessionFailedMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind JoinSessionFailedMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoinSessionFailedMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LeaveSessionMessage
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LeaveSessionMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t LeaveSessionMessage::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LeaveSessionMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LeaveSessionMessage::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Message
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

